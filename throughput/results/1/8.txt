BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'INDONESIA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'ASIA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'MEDIUM ANODIZED COPPER'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1720980.40..1720982.22 rows=728 width=38) (actual time=9572.889..9572.889 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1823393 read=439220
   ->  HashAggregate  (cost=1720933.05..1720945.79 rows=728 width=38) (actual time=9572.839..9572.841 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1823390 read=439220
         ->  Hash Join  (cost=39449.10..1720449.53 rows=24176 width=38) (actual time=648.029..9537.337 rows=24111 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1823390 read=439220
               ->  Nested Loop  (cost=39447.53..1719994.67 rows=24176 width=16) (actual time=647.965..9506.290 rows=24111 loops=1)
                     Buffers: shared hit=1823386 read=439220
                     ->  Hash Join  (cost=39447.24..1712193.96 rows=24176 width=16) (actual time=647.932..9353.889 rows=24111 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1750912 read=439220
                           ->  Nested Loop  (cost=416.55..1672468.23 rows=120878 width=20) (actual time=6.008..8640.363 rows=119939 loops=1)
                                 Buffers: shared hit=1605505 read=438390
                                 ->  Nested Loop  (cost=416.12..1476754.40 rows=399710 width=16) (actual time=5.951..3611.408 rows=394880 loops=1)
                                       Buffers: shared hit=264298 read=197934
                                       ->  Bitmap Heap Scan on part  (cost=411.40..28063.46 rows=13287 width=4) (actual time=5.886..56.397 rows=13196 loops=1)
                                             Recheck Cond: ((p_type)::text = 'MEDIUM ANODIZED COPPER'::text)
                                             Heap Blocks: exact=11355
                                             Buffers: shared hit=11355 read=83
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.08 rows=13287 width=0) (actual time=3.901..3.901 rows=13196 loops=1)
                                                   Index Cond: ((p_type)::text = 'MEDIUM ANODIZED COPPER'::text)
                                                   Buffers: shared read=83
                                       ->  Bitmap Heap Scan on lineitem  (cost=4.72..108.72 rows=31 width=20) (actual time=0.036..0.259 rows=30 loops=13196)
                                             Recheck Cond: (l_partkey = part.p_partkey)
                                             Heap Blocks: exact=395998
                                             Buffers: shared hit=252943 read=197851
                                             ->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_l_shipmode_idx  (cost=0.00..4.71 rows=31 width=0) (actual time=0.021..0.021 rows=30 loops=13196)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Buffers: shared hit=38078 read=16718
                                 ->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=394880)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=1341207 read=240456
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=638.695..638.695 rows=300270 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                 Buffers: shared hit=145407 read=830
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=16.793..560.187 rows=300270 loops=1)
                                       Buffers: shared hit=145407 read=830
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.027..0.071 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.017 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                         Filter: (r_name = 'ASIA'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=15.425..102.591 rows=60054 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145400
                                             Buffers: shared hit=145405 read=830
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=9.895..9.895 rows=60054 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=5 read=830
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=24111)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=72474
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.006 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 10.714 ms
 Execution time: 9573.848 ms
(72 rows)

COMMIT;
COMMIT
